<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd


          http://www.springframework.org/schema/security
              http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- 静态资源，不用权限 -->
    <http pattern="/Content/**" security="none"/>
    <http pattern="/login.jsp" security="none"/>
    <http pattern="/view/frame/js/cloud.js" security="none"/>
    <http pattern="/view/frame/js/login.js" security="none"/>
    <http pattern="/favicon.ico" security="none"/>
    <http pattern="/" security="none"/>
    <http pattern="/login.do" security="none"/>

    <http auto-config="true">
        <!-- IS_AUTHENTICATED_ANONYMOUSLY 匿名登录 -->
        <!--<intercept-url pattern="/pm/**/*.jsp" access="ROLE_STATIC"/>-->
        <intercept-url pattern="/view/**" access="ROLE_USER"/>
        <form-login login-page="/"
                    login-processing-url="/login.do"
                    username-parameter="username"
                    password-parameter="password"
                    authentication-failure-url="/?error=1"
                    authentication-success-forward-url="/index.jsp"/>
        <logout invalidate-session="true" logout-url="/user/logout.do" logout-success-url="/"/>
        <http-basic/>
        <headers>
            <frame-options disabled="true"></frame-options>
        </headers>


        <csrf token-repository-ref="csrfTokenRepository"/>


        <session-management session-authentication-error-url="/frame.expired">
            <!-- max-sessions只容许一个账号登录，error-if-maximum-exceeded 后面账号登录后踢出前一个账号，expired-url session过期跳转界面 -->
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/frame.expired"
                                 session-registry-ref="sessionRegistry"/>
        </session-management>


        <expression-handler ref="webexpressionHandler"></expression-handler>
    </http>


    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>


    <beans:bean id="userDetailsService" class="com.elefirst.login.service.impl.LoginService"/>


    <!--配置web端使用权限控制-->
    <beans:bean id="webexpressionHandler"
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>


    <authentication-manager>
        <authentication-provider ref="authenticationProvider"/>
    </authentication-manager>


    <!-- 自定义userDetailsService， 盐值加密 -->
    <beans:bean id="authenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="hideUserNotFoundExceptions" value="true"/>
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
        <beans:property name="saltSource" ref="saltSource"/>
    </beans:bean>


    <!-- Md5加密 -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>


    <!-- 盐值加密 salt对应数据库字段-->
    <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <beans:property name="userPropertyToUse" value="salt"/>
    </beans:bean>


    <beans:bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"/>

</beans:beans>