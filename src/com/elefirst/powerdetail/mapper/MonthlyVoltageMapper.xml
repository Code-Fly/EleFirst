<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elefirst.powerdetail.mapper.MonthlyVoltageMapper" >
  <resultMap id="BaseResultMap" type="com.elefirst.powerdetail.po.MonthlyVoltage" >
    <result column="days" property="days" jdbcType="VARCHAR" />
    <result column="area_id" property="areaId" jdbcType="VARCHAR" />
    <result column="concentrator_id" property="concentratorId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pn" property="pn" jdbcType="VARCHAR" />
    <result column="maxAVoltage" property="maxavoltage" jdbcType="DOUBLE" />
    <result column="maxBVoltage" property="maxbvoltage" jdbcType="DOUBLE" />
    <result column="maxCVoltage" property="maxcvoltage" jdbcType="DOUBLE" />
    <result column="minAVoltage" property="minavoltage" jdbcType="DOUBLE" />
    <result column="minBVoltage" property="minbvoltage" jdbcType="DOUBLE" />
    <result column="minCVoltage" property="mincvoltage" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    days, area_id, concentrator_id, name, pn, maxAVoltage, maxBVoltage, maxCVoltage, 
    minAVoltage, minBVoltage, minCVoltage
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.elefirst.powerdetail.po.MonthlyVoltageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_view_monthlyvoltage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.elefirst.powerdetail.po.MonthlyVoltageExample" >
    delete from t_view_monthlyvoltage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elefirst.powerdetail.po.MonthlyVoltage" >
    insert into t_view_monthlyvoltage (days, area_id, concentrator_id, 
      name, pn, maxAVoltage, 
      maxBVoltage, maxCVoltage, minAVoltage, 
      minBVoltage, minCVoltage)
    values (#{days,jdbcType=VARCHAR}, #{areaId,jdbcType=VARCHAR}, #{concentratorId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{pn,jdbcType=VARCHAR}, #{maxavoltage,jdbcType=DOUBLE}, 
      #{maxbvoltage,jdbcType=DOUBLE}, #{maxcvoltage,jdbcType=DOUBLE}, #{minavoltage,jdbcType=DOUBLE}, 
      #{minbvoltage,jdbcType=DOUBLE}, #{mincvoltage,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.elefirst.powerdetail.po.MonthlyVoltage" >
    insert into t_view_monthlyvoltage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="days != null" >
        days,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="concentratorId != null" >
        concentrator_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pn != null" >
        pn,
      </if>
      <if test="maxavoltage != null" >
        maxAVoltage,
      </if>
      <if test="maxbvoltage != null" >
        maxBVoltage,
      </if>
      <if test="maxcvoltage != null" >
        maxCVoltage,
      </if>
      <if test="minavoltage != null" >
        minAVoltage,
      </if>
      <if test="minbvoltage != null" >
        minBVoltage,
      </if>
      <if test="mincvoltage != null" >
        minCVoltage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="days != null" >
        #{days,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=VARCHAR},
      </if>
      <if test="concentratorId != null" >
        #{concentratorId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pn != null" >
        #{pn,jdbcType=VARCHAR},
      </if>
      <if test="maxavoltage != null" >
        #{maxavoltage,jdbcType=DOUBLE},
      </if>
      <if test="maxbvoltage != null" >
        #{maxbvoltage,jdbcType=DOUBLE},
      </if>
      <if test="maxcvoltage != null" >
        #{maxcvoltage,jdbcType=DOUBLE},
      </if>
      <if test="minavoltage != null" >
        #{minavoltage,jdbcType=DOUBLE},
      </if>
      <if test="minbvoltage != null" >
        #{minbvoltage,jdbcType=DOUBLE},
      </if>
      <if test="mincvoltage != null" >
        #{mincvoltage,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elefirst.powerdetail.po.MonthlyVoltageExample" resultType="java.lang.Integer" >
    select count(*) from t_view_monthlyvoltage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_view_monthlyvoltage
    <set >
      <if test="record.days != null" >
        days = #{record.days,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null" >
        area_id = #{record.areaId,jdbcType=VARCHAR},
      </if>
      <if test="record.concentratorId != null" >
        concentrator_id = #{record.concentratorId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pn != null" >
        pn = #{record.pn,jdbcType=VARCHAR},
      </if>
      <if test="record.maxavoltage != null" >
        maxAVoltage = #{record.maxavoltage,jdbcType=DOUBLE},
      </if>
      <if test="record.maxbvoltage != null" >
        maxBVoltage = #{record.maxbvoltage,jdbcType=DOUBLE},
      </if>
      <if test="record.maxcvoltage != null" >
        maxCVoltage = #{record.maxcvoltage,jdbcType=DOUBLE},
      </if>
      <if test="record.minavoltage != null" >
        minAVoltage = #{record.minavoltage,jdbcType=DOUBLE},
      </if>
      <if test="record.minbvoltage != null" >
        minBVoltage = #{record.minbvoltage,jdbcType=DOUBLE},
      </if>
      <if test="record.mincvoltage != null" >
        minCVoltage = #{record.mincvoltage,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_view_monthlyvoltage
    set days = #{record.days,jdbcType=VARCHAR},
      area_id = #{record.areaId,jdbcType=VARCHAR},
      concentrator_id = #{record.concentratorId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pn = #{record.pn,jdbcType=VARCHAR},
      maxAVoltage = #{record.maxavoltage,jdbcType=DOUBLE},
      maxBVoltage = #{record.maxbvoltage,jdbcType=DOUBLE},
      maxCVoltage = #{record.maxcvoltage,jdbcType=DOUBLE},
      minAVoltage = #{record.minavoltage,jdbcType=DOUBLE},
      minBVoltage = #{record.minbvoltage,jdbcType=DOUBLE},
      minCVoltage = #{record.mincvoltage,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>