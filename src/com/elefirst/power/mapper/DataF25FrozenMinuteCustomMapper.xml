<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elefirst.power.mapper.DataF25FrozenMinuteCustomMapper">
    <resultMap id="BaseResultMap" type="com.elefirst.power.po.DataF25FrozenMinute">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="concentrator_id" property="concentratorId" jdbcType="VARCHAR"/>
        <result column="pn" property="pn" jdbcType="VARCHAR"/>
        <result column="clientOperationTime" property="clientoperationtime" jdbcType="VARCHAR"/>
        <result column="totalActivePower" property="totalactivepower" jdbcType="VARCHAR"/>
        <result column="A_ActivePower" property="aActivepower" jdbcType="VARCHAR"/>
        <result column="B_ActivePower" property="bActivepower" jdbcType="VARCHAR"/>
        <result column="C_ActivePower" property="cActivepower" jdbcType="VARCHAR"/>
        <result column="totalReactivePower" property="totalreactivepower" jdbcType="VARCHAR"/>
        <result column="A_ReactivePower" property="aReactivepower" jdbcType="VARCHAR"/>
        <result column="B_ReactivePower" property="bReactivepower" jdbcType="VARCHAR"/>
        <result column="C_ReactivePower" property="cReactivepower" jdbcType="VARCHAR"/>
        <result column="totalPowerFactor" property="totalpowerfactor" jdbcType="VARCHAR"/>
        <result column="A_PowerFactor" property="aPowerfactor" jdbcType="VARCHAR"/>
        <result column="B_PowerFactor" property="bPowerfactor" jdbcType="VARCHAR"/>
        <result column="C_PowerFactor" property="cPowerfactor" jdbcType="VARCHAR"/>
        <result column="A_Voltage" property="aVoltage" jdbcType="VARCHAR"/>
        <result column="B_Voltage" property="bVoltage" jdbcType="VARCHAR"/>
        <result column="C_Voltage" property="cVoltage" jdbcType="VARCHAR"/>
        <result column="A_Current" property="aCurrent" jdbcType="VARCHAR"/>
        <result column="B_Current" property="bCurrent" jdbcType="VARCHAR"/>
        <result column="C_Current" property="cCurrent" jdbcType="VARCHAR"/>
        <result column="Zero_Sequence_Current" property="zeroSequenceCurrent" jdbcType="VARCHAR"/>
        <result column="totalApparentPower" property="totalapparentpower" jdbcType="VARCHAR"/>
        <result column="A_ApparentPower" property="aApparentpower" jdbcType="VARCHAR"/>
        <result column="B_ApparentPower" property="bApparentpower" jdbcType="VARCHAR"/>
        <result column="C_ApparentPower" property="cApparentpower" jdbcType="VARCHAR"/>
        <result column="sendTime" property="sendtime" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseResultMapWithF5" type="com.elefirst.power.po.DataF25FrozenMinuteWithF5">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 09 15:11:54 CST 2017.
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="concentrator_id" property="concentratorId" jdbcType="VARCHAR"/>
        <result column="pn" property="pn" jdbcType="VARCHAR"/>
        <result column="clientOperationTime" property="clientoperationtime" jdbcType="VARCHAR"/>
        <result column="totalActivePower" property="totalactivepower" jdbcType="VARCHAR"/>
        <result column="A_ActivePower" property="aActivepower" jdbcType="VARCHAR"/>
        <result column="B_ActivePower" property="bActivepower" jdbcType="VARCHAR"/>
        <result column="C_ActivePower" property="cActivepower" jdbcType="VARCHAR"/>
        <result column="totalReactivePower" property="totalreactivepower" jdbcType="VARCHAR"/>
        <result column="A_ReactivePower" property="aReactivepower" jdbcType="VARCHAR"/>
        <result column="B_ReactivePower" property="bReactivepower" jdbcType="VARCHAR"/>
        <result column="C_ReactivePower" property="cReactivepower" jdbcType="VARCHAR"/>
        <result column="totalPowerFactor" property="totalpowerfactor" jdbcType="VARCHAR"/>
        <result column="A_PowerFactor" property="aPowerfactor" jdbcType="VARCHAR"/>
        <result column="B_PowerFactor" property="bPowerfactor" jdbcType="VARCHAR"/>
        <result column="C_PowerFactor" property="cPowerfactor" jdbcType="VARCHAR"/>
        <result column="A_Voltage" property="aVoltage" jdbcType="VARCHAR"/>
        <result column="B_Voltage" property="bVoltage" jdbcType="VARCHAR"/>
        <result column="C_Voltage" property="cVoltage" jdbcType="VARCHAR"/>
        <result column="A_Current" property="aCurrent" jdbcType="VARCHAR"/>
        <result column="B_Current" property="bCurrent" jdbcType="VARCHAR"/>
        <result column="C_Current" property="cCurrent" jdbcType="VARCHAR"/>
        <result column="Zero_Sequence_Current" property="zeroSequenceCurrent" jdbcType="VARCHAR"/>
        <result column="totalApparentPower" property="totalapparentpower" jdbcType="VARCHAR"/>
        <result column="A_ApparentPower" property="aApparentpower" jdbcType="VARCHAR"/>
        <result column="B_ApparentPower" property="bApparentpower" jdbcType="VARCHAR"/>
        <result column="C_ApparentPower" property="cApparentpower" jdbcType="VARCHAR"/>
        <result column="sendTime" property="sendtime" jdbcType="VARCHAR"/>

        <result column="rate" property="rate" jdbcType="VARCHAR"/>
        <result column="totalpositiveactivepower" property="totalpositiveactivepower" jdbcType="VARCHAR"/>
        <result column="frozen_day" property="frozenDay" jdbcType="VARCHAR"/>
        <result column="frozen_time" property="frozenTime" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseResultMapWithF21" type="com.elefirst.power.po.DataF25FrozenMinuteWithF21">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 09 15:11:54 CST 2017.
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="concentrator_id" property="concentratorId" jdbcType="VARCHAR"/>
        <result column="pn" property="pn" jdbcType="VARCHAR"/>
        <result column="clientOperationTime" property="clientoperationtime" jdbcType="VARCHAR"/>
        <result column="totalActivePower" property="totalactivepower" jdbcType="VARCHAR"/>
        <result column="A_ActivePower" property="aActivepower" jdbcType="VARCHAR"/>
        <result column="B_ActivePower" property="bActivepower" jdbcType="VARCHAR"/>
        <result column="C_ActivePower" property="cActivepower" jdbcType="VARCHAR"/>
        <result column="totalReactivePower" property="totalreactivepower" jdbcType="VARCHAR"/>
        <result column="A_ReactivePower" property="aReactivepower" jdbcType="VARCHAR"/>
        <result column="B_ReactivePower" property="bReactivepower" jdbcType="VARCHAR"/>
        <result column="C_ReactivePower" property="cReactivepower" jdbcType="VARCHAR"/>
        <result column="totalPowerFactor" property="totalpowerfactor" jdbcType="VARCHAR"/>
        <result column="A_PowerFactor" property="aPowerfactor" jdbcType="VARCHAR"/>
        <result column="B_PowerFactor" property="bPowerfactor" jdbcType="VARCHAR"/>
        <result column="C_PowerFactor" property="cPowerfactor" jdbcType="VARCHAR"/>
        <result column="A_Voltage" property="aVoltage" jdbcType="VARCHAR"/>
        <result column="B_Voltage" property="bVoltage" jdbcType="VARCHAR"/>
        <result column="C_Voltage" property="cVoltage" jdbcType="VARCHAR"/>
        <result column="A_Current" property="aCurrent" jdbcType="VARCHAR"/>
        <result column="B_Current" property="bCurrent" jdbcType="VARCHAR"/>
        <result column="C_Current" property="cCurrent" jdbcType="VARCHAR"/>
        <result column="Zero_Sequence_Current" property="zeroSequenceCurrent" jdbcType="VARCHAR"/>
        <result column="totalApparentPower" property="totalapparentpower" jdbcType="VARCHAR"/>
        <result column="A_ApparentPower" property="aApparentpower" jdbcType="VARCHAR"/>
        <result column="B_ApparentPower" property="bApparentpower" jdbcType="VARCHAR"/>
        <result column="C_ApparentPower" property="cApparentpower" jdbcType="VARCHAR"/>
        <result column="sendTime" property="sendtime" jdbcType="VARCHAR"/>

        <result column="rate" property="rate" jdbcType="VARCHAR"/>
        <result column="totalpositiveactivepower" property="totalpositiveactivepower" jdbcType="VARCHAR"/>
        <result column="frozen_month" property="frozenMonth" jdbcType="VARCHAR"/>
        <result column="frozen_time" property="frozenTime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        id, area_id, concentrator_id, pn, clientOperationTime, A_PowerFactor, B_PowerFactor, C_PowerFactor, A_Voltage,
        B_Voltage, C_Voltage, A_Current, B_Current, C_Current, Zero_Sequence_Current, sendTime
    </sql>
    <select id="selectSumByExample" resultMap="BaseResultMap"
            parameterType="com.elefirst.power.po.DataF25FrozenMinuteExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        SUM(totalActivePower+0) AS totalActivePower,
        SUM(A_ActivePower+0) AS A_ActivePower,
        SUM(B_ActivePower+0) AS B_ActivePower,
        SUM(C_ActivePower+0) AS C_ActivePower,
        SUM(totalReactivePower+0) AS totalReactivePower,
        SUM(A_ReactivePower+0) AS A_ReactivePower,
        SUM(B_ReactivePower+0) AS B_ReactivePower,
        SUM(C_ReactivePower+0) AS C_ReactivePower,
        SUM(totalPowerFactor+0) AS totalPowerFactor,
        SUM(totalApparentPower+0) AS totalApparentPower,
        SUM(A_ApparentPower+0) AS A_ApparentPower,
        SUM(B_ApparentPower+0) AS B_ApparentPower,
        SUM(C_ApparentPower+0) AS C_ApparentPower
        from t_003_fn25_frozen_per_15m
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY clientOperationTime
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectSumWithF5ByExample" resultMap="BaseResultMapWithF5"
            parameterType="com.elefirst.power.po.DataF25FrozenMinuteExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        SELECT
        *
        FROM
        (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        SUM(totalActivePower+0) AS totalActivePower,
        SUM(A_ActivePower+0) AS A_ActivePower,
        SUM(B_ActivePower+0) AS B_ActivePower,
        SUM(C_ActivePower+0) AS C_ActivePower,
        SUM(totalReactivePower+0) AS totalReactivePower,
        SUM(A_ReactivePower+0) AS A_ReactivePower,
        SUM(B_ReactivePower+0) AS B_ReactivePower,
        SUM(C_ReactivePower+0) AS C_ReactivePower,
        SUM(totalPowerFactor+0) AS totalPowerFactor,
        SUM(totalApparentPower+0) AS totalApparentPower,
        SUM(A_ApparentPower+0) AS A_ApparentPower,
        SUM(B_ApparentPower+0) AS B_ApparentPower,
        SUM(C_ApparentPower+0) AS C_ApparentPower
        from t_003_fn25_frozen_per_15m
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY clientOperationTime
        ) t1
        LEFT JOIN
        (
        SELECT
        `rate`,`totalPositiveActivePower`,`frozen_day`, CONCAT(`frozen_day` , '000000') AS frozen_time
        FROM t_030_type_two_data_fn5
        ) t2 ON t1.clientOperationTime = t2.frozen_time
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectSumWithF21ByExample" resultMap="BaseResultMapWithF21"
            parameterType="com.elefirst.power.po.DataF25FrozenMinuteExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        SELECT
        *
        FROM
        (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        SUM(totalActivePower+0) AS totalActivePower,
        SUM(A_ActivePower+0) AS A_ActivePower,
        SUM(B_ActivePower+0) AS B_ActivePower,
        SUM(C_ActivePower+0) AS C_ActivePower,
        SUM(totalReactivePower+0) AS totalReactivePower,
        SUM(A_ReactivePower+0) AS A_ReactivePower,
        SUM(B_ReactivePower+0) AS B_ReactivePower,
        SUM(C_ReactivePower+0) AS C_ReactivePower,
        SUM(totalPowerFactor+0) AS totalPowerFactor,
        SUM(totalApparentPower+0) AS totalApparentPower,
        SUM(A_ApparentPower+0) AS A_ApparentPower,
        SUM(B_ApparentPower+0) AS B_ApparentPower,
        SUM(C_ApparentPower+0) AS C_ApparentPower
        from t_003_fn25_frozen_per_15m
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY clientOperationTime
        ) t1
        LEFT JOIN
        (
        SELECT
        `rate`,`totalPositiveActivePower`,`frozen_month`, CONCAT(`frozen_month` , '01000000') AS frozen_time
        FROM t_035_type_two_data_fn21
        ) t2 ON t1.clientOperationTime = t2.frozen_time
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
</mapper>