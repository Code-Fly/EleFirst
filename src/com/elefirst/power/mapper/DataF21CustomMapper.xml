<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elefirst.power.mapper.DataF21CustomMapper">
    <resultMap id="BaseResultMap" type="com.elefirst.power.po.DataF21">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Apr 24 20:48:17 CST 2017.
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="concentrator_id" property="concentratorId" jdbcType="VARCHAR"/>
        <result column="pn" property="pn" jdbcType="VARCHAR"/>
        <result column="rate" property="rate" jdbcType="VARCHAR"/>
        <result column="totalPositiveActivePower" property="totalpositiveactivepower" jdbcType="VARCHAR"/>
        <result column="sendTime" property="sendtime" jdbcType="VARCHAR"/>
        <result column="frozen_month" property="frozenMonth" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Apr 24 20:48:17 CST 2017.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Apr 24 20:48:17 CST 2017.
        -->
        id, area_id, concentrator_id, pn, rate, totalPositiveActivePower, sendTime, frozen_month
    </sql>
    <select id="selectSumByExample" resultMap="BaseResultMap"
            parameterType="com.elefirst.power.po.DataF21Example">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Mar 08 22:44:24 CST 2017.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        SUM(totalPositiveActivePower) AS totalPositiveActivePower
        from t_035_type_two_data_fn21
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY frozen_month
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
</mapper>